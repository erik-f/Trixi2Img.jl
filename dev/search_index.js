var documenterSearchIndex = {"docs":
[{"location":"reference/trixi2img/#Trixi2Img-API","page":"Trixi2Img","title":"Trixi2Img API","text":"","category":"section"},{"location":"reference/trixi2img/","page":"Trixi2Img","title":"Trixi2Img","text":"CurrentModule = Trixi2Img","category":"page"},{"location":"reference/trixi2img/","page":"Trixi2Img","title":"Trixi2Img","text":"Modules = [Trixi2Img]","category":"page"},{"location":"reference/trixi2img/#Trixi2Img.ndim","page":"Trixi2Img","title":"Trixi2Img.ndim","text":"ndims\n\nNumber of spatial dimensions (= 2).\n\n\n\n\n\n","category":"constant"},{"location":"reference/trixi2img/#Trixi2Img.convert-Tuple{Vararg{AbstractString,N} where N}","page":"Trixi2Img","title":"Trixi2Img.convert","text":"convert(filename::AbstractString...;\n        format=:png, variables=[], verbose=false, grid_lines=false,\n        output_directory=\".\", nvisnodes=nothing, max_supported_level=11)\n\nConvert two-dimensional Trixi-generated output files to image files (PNG or PDF).\n\nArguments\n\nfilename: One or more 2D solution/restart files generated by Trixi to create an image from.             Filenames support file globbing, e.g., \"solution*\" to match all files starting             with solution.\nformat: Output format for solution/restart files. Can be 'vtu' or 'vti'.\nvariables: Names of the variables to create images for. If empty, each variable found in the              input file(s) will be plotted.\nverbose: Set to true to enable verbose output.\ngrid_lines: Plot outline of elements. (warning: this is an expensive operation!)\noutput_directory: Output directory where generated files are stored.\nnvisnodes: Number of visualization nodes per element (default: twice the number of DG nodes).              A value of 0 (zero) uses the number of nodes in the DG elements.\nmax_supported_level: Maximum cell refinement level supported for plotting.\n\nExamples\n\njulia> Trixi2Img.convert(\"out/solution_000*.h5\")\n[...]\n\n\n\n\n\n","category":"method"},{"location":"license/#License","page":"License","title":"License","text":"","category":"section"},{"location":"license/","page":"License","title":"License","text":"MIT LicenseCopyright (c) 2020-present The Trixi Authors (see Authors)Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","category":"page"},{"location":"#Trixi2Img","page":"Home","title":"Trixi2Img","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Trixi2Img.jl can create PDF/PNG from 2D output files created by Trixi.jl (solution or restart files). Trixi2Img is part of the Trixi framework.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For further documentation of Trixi.jl and tutorials explaining how to use Trixi with Trixi2Img, please refer to the documentation of Trixi.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you have not yet installed Julia, please follow the instructions for your operating system. Trixi2Img works with Julia v1.5 or higher. Official binaries are available for Windows, macOS, Linux, and FreeBSD.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Trixi2Img is a registered Julia package. Thus, you can install it via","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> import Pkg\n\njulia> Pkg.add(\"Trixi2Img\")","category":"page"},{"location":"#authors-index-md","page":"Home","title":"Authors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Trixi2Img is maintained by the Trixi authors. Its principal developers are Michael Schlottke-Lakemper (University of Cologne, Germany) and Hendrik Ranocha (KAUST, Saudi Arabia).","category":"page"},{"location":"#License-and-contributing","page":"Home","title":"License and contributing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Trixi is licensed under the MIT license (see License).","category":"page"}]
}
